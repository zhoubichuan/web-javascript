(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{450:function(t,s,a){"use strict";a.r(s);var e=a(9),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"二-语法分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-语法分析"}},[t._v("#")]),t._v(" 二.语法分析")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("前言")]),t._v(" "),s("p",[t._v("将上一步的词法单元集合分析合并，最终转换为一个由元素逐级嵌套所组成的代表了程序语法结构的树，即抽象语法树（AST）")])]),t._v(" "),s("h2",{attrs:{id:"_1-parse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-parse"}},[t._v("#")]),t._v(" 1.parse")]),t._v(" "),s("h2",{attrs:{id:"_2-ast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ast"}},[t._v("#")]),t._v(" 2.ast")]),t._v(" "),s("h2",{attrs:{id:"_3-gencode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-gencode"}},[t._v("#")]),t._v(" 3.gencode")])])}),[],!1,null,null,null);s.default=r.exports}}]);