(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{744:function(s,t,a){"use strict";a.r(t);var n=a(38),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"六-自动补全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-自动补全"}},[s._v("#")]),s._v(" 六.自动补全")]),s._v(" "),a("p",[s._v("当 npm script 里面积累的命令越来越多时，重度命令行用户肯定会好奇，能不能实现类似 bash、zsh 里面的命令自动补全？答案是肯定的，下面来逐一介绍。")]),s._v(" "),a("h2",{attrs:{id:"_1-直接列出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接列出"}},[s._v("#")]),s._v(" 1. 直接列出")]),s._v(" "),a("p",[s._v("前面章节有过介绍，不带任何参数运行 npm run 能列出 scripts 对象中定义的所有命令，再结合管道操作符、less 命令（这里的 less 不是 css 领域的 less，而是 linux 里面的工具），即使 scripts 子命令很多我们也能移动自如。")]),s._v(" "),a("p",[s._v("比如，我们在项目中执行："),a("code",[s._v("npm run | less")]),s._v("，得到如下结果，注意截图左下方的红框，按空格能翻页：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcdae64f00ea?w=1094&h=715&f=png&s=101307",alt:""}})]),s._v(" "),a("p",[s._v("在这个结果里面，我们可以进行类似于 Vim 中的搜索，先按 "),a("code",[s._v("/")]),s._v(" 进入搜索模式，然后输入 "),a("code",[s._v("markdown")]),s._v("，搜索结果如下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcdd6b736441?w=1100&h=399&f=png&s=59941",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_2-集成到-shell-中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-集成到-shell-中"}},[s._v("#")]),s._v(" 2. 集成到 shell 中")]),s._v(" "),a("p",[s._v("npm 自身提供了自动完成工具 "),a("a",{attrs:{href:"https://docs.npmjs.com/cli/completion",target:"_blank",rel:"noopener noreferrer"}},[s._v("completion"),a("OutboundLink")],1),s._v("，将其集成到 "),a("a",{attrs:{href:"https://www.gnu.org/software/bash",target:"_blank",rel:"noopener noreferrer"}},[s._v("bash"),a("OutboundLink")],1),s._v(" 或者 "),a("a",{attrs:{href:"https://github.com/robbyrussell/oh-my-zsh",target:"_blank",rel:"noopener noreferrer"}},[s._v("zsh"),a("OutboundLink")],1),s._v(" 里也非常容易（顺便说一句，早期我是 bash 的忠实用户，两年前切换到 zsh，就再也没回头）。")]),s._v(" "),a("p",[s._v("官方文档里面的集成方法如下：\nß")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm completion >> ~/.bashrc\nnpm completion >> ~/.zshrc\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("TIP#10")]),s._v("：如果你好奇上面的命令究竟做了什么，尝试直接运行 "),a("code",[s._v("npm completion")]),s._v("，就能看到它其实在你的配置文件中追加了一大坨 shell。上面命令中的 "),a("code",[s._v(">>")]),s._v(" 意思是把前面命令的输出追加到后面的文件中。")])]),s._v(" "),a("p",[s._v("如果你也有代码洁癖，为了保持 .zshrc 或者 .bashrc 文件的整洁，可以用下面的方法：")]),s._v(" "),a("p",[s._v("第 1 步，把 npm completion 产生的那坨命令放在单独的文件中：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" completion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.npm-completion.bash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("第 2 步，在 .bashrc 或者 .zshrc 中引入这个文件：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[ -f ~/.npm-completion.bash ] && source ~/.npm-completion.bash;"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.bashrc\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[ -f ~/.npm-completion.bash ] && source ~/.npm-completion.bash;"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.zshrc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("TIP#11")]),s._v("：执行完上面的命令一定要记得 "),a("code",[s._v("source ~/.zshrc")]),s._v(" 或者 "),a("code",[s._v("source ~/.bashrc")]),s._v("，来让自动完成生效。")])]),s._v(" "),a("p",[s._v("接下来我们就可以尽情享受自动完成带来的便利了，尝试在命令行中输入 npm run，"),a("strong",[s._v("然后键入空格（空格很重要）")]),s._v("，然后键入 tab 键，发现命令行有什么反应了么？在列出备选项之后，继续按 tab，就能在不同的选项之间切换，找到自己想要的，直接回车就能完成命令补全。多练习几次，你的手指和大脑就能熟练掌握这个过程。")]),s._v(" "),a("p",[s._v("在我们的项目目录里面键入 "),a("code",[s._v("npm run cov")]),s._v(" 再键入 tab 键，命令行又有什么反应？")]),s._v(" "),a("p",[s._v("需要单独说明的是，npm completion 能实现的自动完成不仅仅是 scripts 里面的子自命令，npm 的子命令也是可以的，可以依次输入 "),a("code",[s._v("npm")]),s._v("、空格、tab，看看命令行的反应。")]),s._v(" "),a("h2",{attrs:{id:"_3-自动完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-自动完成"}},[s._v("#")]),s._v(" 3. 自动完成")]),s._v(" "),a("p",[s._v("人类对于效率的追求是永无止境的，工程师更是如此，npm 命令补全到目前为止显然还不够高效，能不能补全 package.json 里面的依赖名称？能不能在补全 npm script 的时候列出这个命令是干啥的？")]),s._v(" "),a("p",[s._v("有人已经帮我们解决了这个痛点，还写成了 zsh 插件（bash 的同学无福消受了）："),a("a",{attrs:{href:"https://github.com/lukechilds/zsh-better-npm-completion",target:"_blank",rel:"noopener noreferrer"}},[s._v("zsh-better-npm-completion"),a("OutboundLink")],1),s._v("，它有以下几个让人无法拒绝的便利：")]),s._v(" "),a("h3",{attrs:{id:"_1-在-npm-install-时自动根据历史安装过的包给出补全建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-在-npm-install-时自动根据历史安装过的包给出补全建议"}},[s._v("#")]),s._v(" 1. 在 npm install 时自动根据历史安装过的包给出补全建议")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bce81ef5dac6?w=1267&h=249&f=png&s=65352",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_2-在-npm-uninstall-时候根据-package-json-里面的声明给出补全建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-在-npm-uninstall-时候根据-package-json-里面的声明给出补全建议"}},[s._v("#")]),s._v(" 2. 在 npm uninstall 时候根据 package.json 里面的声明给出补全建议")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcec1c11549f?w=1263&h=114&f=png&s=26712",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_3-在-npm-run-时补全建议中列出命令细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-在-npm-run-时补全建议中列出命令细节"}},[s._v("#")]),s._v(" 3. 在 npm run 时补全建议中列出命令细节")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcf08dc06346?w=1256&h=331&f=png&s=78999",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/3/1601bcf1e3a37f16?w=1263&h=222&f=png&s=49982",alt:""}})])])}),[],!1,null,null,null);t.default=e.exports}}]);