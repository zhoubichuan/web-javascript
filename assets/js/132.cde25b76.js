(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{550:function(s,a,t){"use strict";t.r(a);var e=t(7),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"十三-构建流水线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十三-构建流水线"}},[s._v("#")]),s._v(" 十三.构建流水线")]),s._v(" "),a("p",[s._v("在现代前端项目的交付工作流中，部署前最关键的环节就是构建，构建环节要完成的事情通常包括：")]),s._v(" "),a("ul",[a("li",[s._v("源代码预编译：比如 less、sass、typescript；")]),s._v(" "),a("li",[s._v("图片优化、雪碧图生成；")]),s._v(" "),a("li",[s._v("JS、CSS 合并、压缩；")]),s._v(" "),a("li",[s._v("静态资源加版本号和引用替换；")]),s._v(" "),a("li",[s._v("静态资源传 CDN 等。")])]),s._v(" "),a("p",[s._v("现在大多数同学所接触的项目构建过程可能都是别人配置好的，但是对于构建过程中的某些考量可能并不是很清楚。")]),s._v(" "),a("p",[s._v("接下来，我们将组合 npm script 和简单的命令行工具为实际项目添加构建过程，以加深对构建过程的理解，同时也会用到前面很多章节的知识点。")]),s._v(" "),a("h2",{attrs:{id:"_1-项目目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-项目目录结构"}},[s._v("#")]),s._v(" 1. 项目目录结构")]),s._v(" "),a("p",[s._v("对之前的示例项目做简单改造，让目录结构包括典型的前端项目资源引用情况：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("client\n├── images\n│   └── schedule.png\n├── index.html\n├── scripts\n│   └── main.js\n└── styles\n    └── main.css\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("可能的资源依赖关系如下：")]),s._v(" "),a("ul",[a("li",[s._v("css、html 文件中引用了图片；")]),s._v(" "),a("li",[s._v("html 文件中引用了 css、js；")])]),s._v(" "),a("p",[s._v("显而易见，我们的构建过程必须遵循下面的步骤才能不出错：")]),s._v(" "),a("ol",[a("li",[s._v("压缩图片；")]),s._v(" "),a("li",[s._v("编译 less、压缩 css；")]),s._v(" "),a("li",[s._v("编译、压缩 js；")]),s._v(" "),a("li",[s._v("给图片加版本号并替换 js、css 中的引用；")]),s._v(" "),a("li",[s._v("给 js、css 加版本号并替换 html 中的引用；")])]),s._v(" "),a("h2",{attrs:{id:"_2-添加构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加构建过程"}},[s._v("#")]),s._v(" 2. 添加构建过程")]),s._v(" "),a("p",[s._v("下面介绍如何结合 npm script 正确的给这样的项目结构加上构建过程。")]),s._v(" "),a("h3",{attrs:{id:"_1-准备构建目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备构建目录"}},[s._v("#")]),s._v(" 1. 准备构建目录")]),s._v(" "),a("p",[s._v("我们约定构建产生的结果代码，放在 dist 目录下，与 client 的结构完全相同，每次构建前，清空之前的构建目录，利用 npm 的钩子机制添加 prebuild 命令如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client:static-server"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http-server client/"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client:static-server"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http-server client/"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prebuild"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf dist && mkdir -p dist/{images,styles,scripts}"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-准备脚本目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-准备脚本目录"}},[s._v("#")]),s._v(" 2. 准备脚本目录")]),s._v(" "),a("p",[s._v("构建过程需要的命令稍长，我们可以使用 scripty 来把这些脚本剥离到单独的文件中，为此需要准备单独的目录，并且我们的构建过程分为：images、styles、scripts、hash 四个步骤，每个步骤准备单独的文件。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" scripts/build\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" scripts/build.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" scripts/build/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("images,styles,scripts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-R")]),s._v(" a+x scripts\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("脚本文件的可执行权限必须添加正确，否则 scripty 会直接报错")]),s._v("，上面命令执行完之后，scripts 目录包含如下内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("scripts\n├── build\n│   ├── hash.sh\n│   ├── images.sh\n│   ├── scripts.sh\n│   └── styles.sh\n├── build.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_3-图片构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-图片构建过程"}},[s._v("#")]),s._v(" 3. 图片构建过程")]),s._v(" "),a("p",[s._v("图片构建的经典工具是 "),a("a",{attrs:{href:"https://github.com/imagemin/imagemin",target:"_blank",rel:"noopener noreferrer"}},[s._v("imagemin"),a("OutboundLink")],1),s._v("，它也提供了命令行版本 "),a("a",{attrs:{href:"https://github.com/imagemin/imagemin-cli",target:"_blank",rel:"noopener noreferrer"}},[s._v("imagemin-cli"),a("OutboundLink")],1),s._v("，首先安装依赖：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i imagemin-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm install imagemin-cli --save-dev")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn add imagemin-cli -D")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后在 scripts/build/images.sh 中添加如下内容：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("imagemin client/images/* --out-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dist/images\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后在 package.json 中添加 build:images 命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:images"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("尝试运行 npm run prebuild && npm run build:images，然后观察 dist 目录的变化。")]),s._v(" "),a("h3",{attrs:{id:"_4-样式构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-样式构建过程"}},[s._v("#")]),s._v(" 4. 样式构建过程")]),s._v(" "),a("p",[s._v("我们使用 "),a("a",{attrs:{href:"http://lesscss.org/usage/",target:"_blank",rel:"noopener noreferrer"}},[s._v("less"),a("OutboundLink")],1),s._v(" 编写样式，所以需要预编译样式代码，可以使用 less 官方库自带的命令行工具 lessc，使用 sass 的同学可以直接使用 "),a("a",{attrs:{href:"https://github.com/sass/node-sass",target:"_blank",rel:"noopener noreferrer"}},[s._v("node-sass"),a("OutboundLink")],1),s._v("。此外，样式预编译完成之后，我们需要使用 "),a("a",{attrs:{href:"https://www.npmjs.com/package/cssmin",target:"_blank",rel:"noopener noreferrer"}},[s._v("cssmin"),a("OutboundLink")],1),s._v(" 来完成代码预压缩。首先安装依赖：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i cssmin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm install cssmin --save-dev")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn add cssmin -D")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后在 scripts/build/styles.sh 中添加如下内容，这里我们使用到了 shell 里面的管道操作符 "),a("code",[s._v("|")]),s._v(" 和输出重定向 "),a("code",[s._v(">")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" client/styles/*.css\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  lessc "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cssmin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dist/styles/"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" $file"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后在 package.json 中添加 build:styles 命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:styles"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("尝试运行 npm run prebuild && npm run build:styles，然后观察 dist 目录的变化，应该能看到 less 编译之后再被压缩的 css 代码。")]),s._v(" "),a("h3",{attrs:{id:"_4-js-构建过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-js-构建过程"}},[s._v("#")]),s._v(" 4. JS 构建过程")]),s._v(" "),a("p",[s._v("我们使用 ES6 编写 JS 代码，所以需要 "),a("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2/tree/harmony",target:"_blank",rel:"noopener noreferrer"}},[s._v("uglify-es"),a("OutboundLink")],1),s._v(" 来进行代码压缩，如果你不使用 ES6，可以直接使用 "),a("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2",target:"_blank",rel:"noopener noreferrer"}},[s._v("uglify-js"),a("OutboundLink")],1),s._v(" 来压缩代码，首先安装依赖：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i uglify-es "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm install uglify-es --save-dev")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn add uglify-es -D")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后在 scripts/build/scripts.sh 中添加如下内容，"),a("strong",[s._v("需要额外注意的是，这里我们需要手动指定 uglify-es 目录下的 bin 文件，否则识别不了 ES6 语法")]),s._v("，因为 uglify-es 在 npm install 过程自动创建的软链是错误的。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" client/scripts/*.js\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  ./node_modules/uglify-es/bin/uglifyjs "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--mangle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" dist/scripts/"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" $file"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后在 package.json 中添加 build:scripts 命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:scripts"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("尝试运行 npm run prebuild && npm run build:scripts，然后观察 dist 目录的变化，应该能看到被 uglify-es 压缩后的代码。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("TIP#19")]),s._v("：uglify-es 支持很多其他的选项，以及 sourcemap，对 JS 代码做极致的优化，详细"),a("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2/tree/harmony#command-line-options",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"_4-资源版本号和引用替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-资源版本号和引用替换"}},[s._v("#")]),s._v(" 4. 资源版本号和引用替换")]),s._v(" "),a("p",[s._v("给静态资源加版本号的原因是线上环境的静态资源通常都放在 CDN 上，或者设置了很长时间的缓存，或者两者兼有，如果资源更新了但没有更新版本号，浏览器端是拿不到最新内容的，手动加版本号的过程很繁琐并且容易出错，为此自动化这个过程就显得非常 \b 有价值，通常的做法是利用文件内容做哈希，比如 md5，然后以这个哈希值作为版本号，版本号附着在文件名里面，线上环境的资源引用全部是带版本号的。")]),s._v(" "),a("p",[s._v("为了 \b 实现这个过程，我们需要引入两个小工具：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/keithamus/hashmark",target:"_blank",rel:"noopener noreferrer"}},[s._v("hashmark"),a("OutboundLink")],1),s._v("，自动添加版本号；")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/songkick/replaceinfiles",target:"_blank",rel:"noopener noreferrer"}},[s._v("replaceinfiles"),a("OutboundLink")],1),s._v("，自动完成引用替换，它需要将版本号过程的输出作为输入；")])]),s._v(" "),a("p",[s._v("首先安装 \b 依赖：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i hashmark replaceinfiles "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm install hashmark replaceinfiles --save-dev")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yarn add hashmark replaceinfiles -D")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后在 scripts/build/hash.sh 中添加如下内容：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给图片资源加上版本号，并且替换引用")]),s._v("\nhashmark "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" dist "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**/*.{png,jpg}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{dir}/{name}.{hash}{ext}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" replaceinfiles "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-S")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dist/**/*.css'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{dir}/{base}'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给 js、css 资源加上版本号，并且替换引用")]),s._v("\nhashmark "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" dist "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**/*.{css,js}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{dir}/{name}.{hash}{ext}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" replaceinfiles "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-S")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'client/index.html'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dist/index.html'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("然后在 package.json 中添加 build:hash 命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:hash"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个步骤需要依赖前几个步骤，不能单独运行，接下来我们需要增加完整的 build 命令把上面几个步骤串起来。")]),s._v(" "),a("h3",{attrs:{id:"_5-完整的构建步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-完整的构建步骤"}},[s._v("#")]),s._v(" 5. 完整的构建步骤")]),s._v(" "),a("p",[s._v("最后我们在 package.json 中添加 build 命令把所有的步骤串起来，完整的 diff 如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client:static-server"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http-server client/"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client:static-server"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http-server client/"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prebuild"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf dist && mkdir -p dist/{images,styles,scripts}"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:images"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:scripts"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:styles"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build:hash"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripty"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("其中 scripts/build.sh 的内容如下：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("step")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'images'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'scripts'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'styles'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hash'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build:"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$step")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后我们尝试运行 npm run build，完整的过程输出如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/18/16066e5912427543?w=984&h=1290&f=png&s=171783",alt:""}})]),s._v(" "),a("p",[s._v("构建完成的 dist 目录内容如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/18/16066e5b824399a7?w=698&h=240&f=png&s=25460",alt:""}})]),s._v(" "),a("p",[s._v("可以看到，所有的静态资源都加上了版本号。")]),s._v(" "),a("p",[s._v("构建完成的 dist/index.html 内容如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/18/16066e5e1a91e46c?w=875&h=416&f=png&s=74207",alt:""}})]),s._v(" "),a("p",[s._v("可以看到，静态资源的版本号被正确替换了，为了验证构建出来的页面是否正常运行，可以运行 "),a("code",[s._v("./node_modules/.bin/http-server dist")]),s._v("，然后浏览器打开："),a("code",[s._v("http://127.0.0.1:8080")])])])}),[],!1,null,null,null);a.default=n.exports}}]);