(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{520:function(t,s,e){"use strict";e.r(s);var a=e(9),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"十一-自动刷新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一-自动刷新"}},[t._v("#")]),t._v(" 十一.自动刷新")]),t._v(" "),s("p",[t._v("前端工程师日常开发最频繁（实际上最浪费时间）的操作是什么？可能你已经想到了，就是刷新页面，要让变更生效，需要重新加载，刷新页面的操作就变成了重复低效的操作。")]),t._v(" "),s("p",[t._v("于是社区里出现了 "),s("a",{attrs:{href:"https://www.npmjs.com/package/livereload",target:"_blank",rel:"noopener noreferrer"}},[t._v("LiveReload"),s("OutboundLink")],1),t._v(" 来把这个过程自动化，react 种子项目生成工具 "),s("a",{attrs:{href:"https://github.com/facebookincubator/create-react-app",target:"_blank",rel:"noopener noreferrer"}},[t._v("create-react-app"),s("OutboundLink")],1),t._v(" 中就使用了这种技术。")]),t._v(" "),s("p",[t._v("但随着技术的演化，在单页应用中刷新页面意味着客户端状态的全部丢失，特别是复杂的单页应用刷新意味着更大量的重复工作才能回到刷新前的状态，于是社区又捣鼓出了 "),s("a",{attrs:{href:"https://webpack.js.org/concepts/hot-module-replacement/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hot Module Replacement，简称为 HMR"),s("OutboundLink")],1),t._v("，比如使用 "),s("a",{attrs:{href:"https://github.com/vuejs/vue-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-cli"),s("OutboundLink")],1),t._v(" 创建的 "),s("a",{attrs:{href:"https://github.com/vuejs-templates/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack"),s("OutboundLink")],1),t._v(" 种子项目中就包含这种特性，"),s("a",{attrs:{href:"https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-native"),s("OutboundLink")],1),t._v(" 也内置了这种特性，来帮助开发者提高效率。")]),t._v(" "),s("p",[t._v("读到这里，你可能会嘀咕，看起来 LiveReload 并不是最新的技术，还讨论它干啥，实际上它是自动刷新技术的鼻祖，后续的 HMR、HR 等都是它的改良版，动手配置下自动刷新，也能让你对这些技术的基本原理略知一二。")]),t._v(" "),s("p",[t._v("下面介绍如何在经典的前端项目中（引用了 css、js 的 html 页面）接入 LiveReload 的详细步骤：")]),t._v(" "),s("h2",{attrs:{id:"_1-安装项目依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装项目依赖"}},[t._v("#")]),t._v(" 1. 安装项目依赖")]),t._v(" "),s("p",[t._v("使用如下命令安装 "),s("a",{attrs:{href:"https://www.npmjs.com/package/livereload",target:"_blank",rel:"noopener noreferrer"}},[t._v("livereload"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://www.npmjs.com/package/http-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("http-server"),s("OutboundLink")],1),t._v(" 到项目依赖中：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i livereload http-server -D\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm install livereload http-server --save-dev")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yarn add livereload http-server -D")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"_2-添加-npm-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加-npm-script"}},[t._v("#")]),t._v(" 2. 添加 npm script")]),t._v(" "),s("p",[t._v("按如下提示添加命令，方便我们启动 LiveReload 服务器和通过 HTTP 的方式访问页面：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("-    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cover:open"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripty"')]),t._v("\n+    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cover:open"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripty"')]),t._v(",\n+    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm-run-all --parallel client:*"')]),t._v(",\n+    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client:reload-server"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"livereload client/"')]),t._v(",\n+    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client:static-server"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http-server client/"')]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("其中 client 命令能同时启动 livereload 服务、静态文件服务。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("TIP#16")]),t._v("：可能有同学会问，为什么需要启动两个服务，其中 http-server 启动的是静态文件服务器，该服务启动后可以通过 http 的方式访问文件系统上的文件，而 livereload 是启动了自动刷新服务，该服务负责监听文件系统变化，并在文件系统变化时通知所有连接的客户端，在 "),s("code",[t._v("client/index.html")]),t._v(" 中嵌入的那段 js 实际上是和 livereload-server 连接的一个 livereload-client。")])]),t._v(" "),s("h2",{attrs:{id:"_3-在页面中嵌入-livereload-脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-在页面中嵌入-livereload-脚本"}},[t._v("#")]),t._v(" 3. 在页面中嵌入 livereload 脚本")]),t._v(" "),s("p",[t._v("修改 client/index.html 嵌入 livereload 脚本（能够连接我们的 livereload 服务），diff 如下：")]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("LiveReload Demo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/h"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n+  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n+    document.write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<script src=\"http://'")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location.host "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" +\n+      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':35729/livereload.js?snipver=1\"></'")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n+  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("TIP#17")]),t._v("：livereload 是支持在启动时自定义端口的，如果你使用了自定义端口，在页面中嵌入的这段 js 里面的 "),s("code",[t._v("35729")]),t._v(" 也需要替换成对应的端口。")])]),t._v(" "),s("h2",{attrs:{id:"_4-启动服务并测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-启动服务并测试"}},[t._v("#")]),t._v(" 4. 启动服务并测试")]),t._v(" "),s("p",[t._v("最后，运行 npm run client 之后，截图如下，注意两个红框里面的输出表示服务启动成功：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/14/1605294cbbf843bc?w=1066&h=503&f=png&s=111997",alt:""}})]),t._v(" "),s("p",[t._v("然后，打开浏览器访问：http://localhost:8080，接着修改 client/main.css 并保存（"),s("strong",[t._v("别忘了保存")]),t._v("），你会发现浏览器自动刷新了。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("TIP#18")]),t._v("：有代码洁癖的同学可能会问，在页面中嵌入的那段 js 在线上环境咋办？实际上在嵌入这段脚本的时候可以通过简单的手段（比如判断 location.hostname）去检查当前页面运行环境，如果是线上环境就不嵌入了，或者使用打包工具处理 html 文件，上线前直接去掉即可。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);